# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'GhostUI.ui'
#
# Created by: PyQt5 UI code generator 5.9.2
#
# WARNING! All changes made in this file will be lost!

from PyQt5 import QtCore, QtGui, QtWidgets

class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(925, 661)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(MainWindow.sizePolicy().hasHeightForWidth())
        MainWindow.setSizePolicy(sizePolicy)
        MainWindow.setStyleSheet("background-color: rgb(53, 53, 53);")
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.horizontalLayout = QtWidgets.QHBoxLayout(self.centralwidget)
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.groupBox_2 = QtWidgets.QGroupBox(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(10)
        sizePolicy.setHeightForWidth(self.groupBox_2.sizePolicy().hasHeightForWidth())
        self.groupBox_2.setSizePolicy(sizePolicy)
        self.groupBox_2.setStyleSheet("color: rgb(255, 201, 38);")
        self.groupBox_2.setFlat(True)
        self.groupBox_2.setCheckable(False)
        self.groupBox_2.setObjectName("groupBox_2")
        self.gridLayout_5 = QtWidgets.QGridLayout(self.groupBox_2)
        self.gridLayout_5.setObjectName("gridLayout_5")
        self.tabWidget = QtWidgets.QTabWidget(self.groupBox_2)
        self.tabWidget.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.tabWidget.setAutoFillBackground(False)
        self.tabWidget.setStyleSheet("border-color: rgb(83, 83, 83);")
        self.tabWidget.setTabShape(QtWidgets.QTabWidget.Triangular)
        self.tabWidget.setElideMode(QtCore.Qt.ElideMiddle)
        self.tabWidget.setTabBarAutoHide(False)
        self.tabWidget.setObjectName("tabWidget")
        self.EditorTab = QtWidgets.QWidget()
        self.EditorTab.setObjectName("EditorTab")
        self.gridLayout_7 = QtWidgets.QGridLayout(self.EditorTab)
        self.gridLayout_7.setObjectName("gridLayout_7")
        self.Stop = QtWidgets.QPushButton(self.EditorTab)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.Stop.sizePolicy().hasHeightForWidth())
        self.Stop.setSizePolicy(sizePolicy)
        self.Stop.setStyleSheet("color: rgb(230, 187, 29);")
        self.Stop.setObjectName("Stop")
        self.gridLayout_7.addWidget(self.Stop, 1, 2, 1, 1)
        self.scrollArea = QtWidgets.QScrollArea(self.EditorTab)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.scrollArea.sizePolicy().hasHeightForWidth())
        self.scrollArea.setSizePolicy(sizePolicy)
        self.scrollArea.setMaximumSize(QtCore.QSize(200, 16777215))
        self.scrollArea.setStyleSheet("color: rgb(44, 44, 44);\n"
"")
        self.scrollArea.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.scrollArea.setFrameShadow(QtWidgets.QFrame.Plain)
        self.scrollArea.setLineWidth(0)
        self.scrollArea.setWidgetResizable(True)
        self.scrollArea.setObjectName("scrollArea")
        self.scrollAreaWidgetContents_3 = QtWidgets.QWidget()
        self.scrollAreaWidgetContents_3.setGeometry(QtCore.QRect(0, 0, 181, 687))
        self.scrollAreaWidgetContents_3.setObjectName("scrollAreaWidgetContents_3")
        self.gridLayout = QtWidgets.QGridLayout(self.scrollAreaWidgetContents_3)
        self.gridLayout.setObjectName("gridLayout")
        self.groupBox_5 = QtWidgets.QGroupBox(self.scrollAreaWidgetContents_3)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(8)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.groupBox_5.sizePolicy().hasHeightForWidth())
        self.groupBox_5.setSizePolicy(sizePolicy)
        self.groupBox_5.setStyleSheet("color: rgb(197, 178, 36);")
        self.groupBox_5.setFlat(True)
        self.groupBox_5.setObjectName("groupBox_5")
        self.gridLayout_4 = QtWidgets.QGridLayout(self.groupBox_5)
        self.gridLayout_4.setObjectName("gridLayout_4")
        self.Wait = QtWidgets.QPushButton(self.groupBox_5)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Ignored, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.Wait.sizePolicy().hasHeightForWidth())
        self.Wait.setSizePolicy(sizePolicy)
        self.Wait.setStyleSheet("color: rgb(230, 187, 29);")
        self.Wait.setObjectName("Wait")
        self.gridLayout_4.addWidget(self.Wait, 1, 0, 1, 1)
        self.Repeat = QtWidgets.QPushButton(self.groupBox_5)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Ignored, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.Repeat.sizePolicy().hasHeightForWidth())
        self.Repeat.setSizePolicy(sizePolicy)
        self.Repeat.setStyleSheet("color: rgb(230, 187, 29);")
        self.Repeat.setObjectName("Repeat")
        self.gridLayout_4.addWidget(self.Repeat, 2, 0, 1, 1)
        self.Break = QtWidgets.QPushButton(self.groupBox_5)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Ignored, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.Break.sizePolicy().hasHeightForWidth())
        self.Break.setSizePolicy(sizePolicy)
        self.Break.setStyleSheet("color: rgb(230, 187, 29);")
        self.Break.setObjectName("Break")
        self.gridLayout_4.addWidget(self.Break, 4, 0, 1, 1)
        self.gridLayout.addWidget(self.groupBox_5, 2, 0, 1, 1)
        self.groupBox_4 = QtWidgets.QGroupBox(self.scrollAreaWidgetContents_3)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.groupBox_4.sizePolicy().hasHeightForWidth())
        self.groupBox_4.setSizePolicy(sizePolicy)
        self.groupBox_4.setStyleSheet("color: rgb(197, 178, 36);")
        self.groupBox_4.setFlat(True)
        self.groupBox_4.setObjectName("groupBox_4")
        self.gridLayout_3 = QtWidgets.QGridLayout(self.groupBox_4)
        self.gridLayout_3.setObjectName("gridLayout_3")
        self.TestClipBoard = QtWidgets.QPushButton(self.groupBox_4)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.TestClipBoard.sizePolicy().hasHeightForWidth())
        self.TestClipBoard.setSizePolicy(sizePolicy)
        self.TestClipBoard.setStyleSheet("color: rgb(230, 187, 29);")
        self.TestClipBoard.setObjectName("TestClipBoard")
        self.gridLayout_3.addWidget(self.TestClipBoard, 3, 0, 1, 1)
        self.SetClipBoard = QtWidgets.QPushButton(self.groupBox_4)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Ignored, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.SetClipBoard.sizePolicy().hasHeightForWidth())
        self.SetClipBoard.setSizePolicy(sizePolicy)
        self.SetClipBoard.setStyleSheet("color: rgb(230, 187, 29);")
        self.SetClipBoard.setObjectName("SetClipBoard")
        self.gridLayout_3.addWidget(self.SetClipBoard, 0, 0, 1, 1)
        self.PasteClipBoard = QtWidgets.QPushButton(self.groupBox_4)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Ignored, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.PasteClipBoard.sizePolicy().hasHeightForWidth())
        self.PasteClipBoard.setSizePolicy(sizePolicy)
        self.PasteClipBoard.setStyleSheet("color: rgb(230, 187, 29);")
        self.PasteClipBoard.setObjectName("PasteClipBoard")
        self.gridLayout_3.addWidget(self.PasteClipBoard, 1, 0, 1, 1)
        self.TypeClipBoard = QtWidgets.QPushButton(self.groupBox_4)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Ignored, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.TypeClipBoard.sizePolicy().hasHeightForWidth())
        self.TypeClipBoard.setSizePolicy(sizePolicy)
        self.TypeClipBoard.setStyleSheet("color: rgb(230, 187, 29);")
        self.TypeClipBoard.setObjectName("TypeClipBoard")
        self.gridLayout_3.addWidget(self.TypeClipBoard, 2, 0, 1, 1)
        self.gridLayout.addWidget(self.groupBox_4, 1, 0, 1, 1)
        self.groupBox_6 = QtWidgets.QGroupBox(self.scrollAreaWidgetContents_3)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(8)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.groupBox_6.sizePolicy().hasHeightForWidth())
        self.groupBox_6.setSizePolicy(sizePolicy)
        self.groupBox_6.setStyleSheet("color: rgb(197, 178, 36);\n"
"border-color: rgb(68, 68, 68);")
        self.groupBox_6.setFlat(True)
        self.groupBox_6.setObjectName("groupBox_6")
        self.gridLayout_6 = QtWidgets.QGridLayout(self.groupBox_6)
        self.gridLayout_6.setObjectName("gridLayout_6")
        self.Var = QtWidgets.QPushButton(self.groupBox_6)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Ignored, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.Var.sizePolicy().hasHeightForWidth())
        self.Var.setSizePolicy(sizePolicy)
        self.Var.setStyleSheet("color: rgb(230, 187, 29);")
        self.Var.setObjectName("Var")
        self.gridLayout_6.addWidget(self.Var, 4, 0, 1, 1)
        self.Evaluate = QtWidgets.QPushButton(self.groupBox_6)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Ignored, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.Evaluate.sizePolicy().hasHeightForWidth())
        self.Evaluate.setSizePolicy(sizePolicy)
        self.Evaluate.setStyleSheet("color: rgb(230, 187, 29);")
        self.Evaluate.setObjectName("Evaluate")
        self.gridLayout_6.addWidget(self.Evaluate, 1, 0, 1, 1)
        self.IF = QtWidgets.QPushButton(self.groupBox_6)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Ignored, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.IF.sizePolicy().hasHeightForWidth())
        self.IF.setSizePolicy(sizePolicy)
        self.IF.setStyleSheet("color: rgb(230, 187, 29);")
        self.IF.setObjectName("IF")
        self.gridLayout_6.addWidget(self.IF, 2, 0, 1, 1)
        self.END = QtWidgets.QPushButton(self.groupBox_6)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Ignored, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.END.sizePolicy().hasHeightForWidth())
        self.END.setSizePolicy(sizePolicy)
        self.END.setStyleSheet("color: rgb(230, 187, 29);")
        self.END.setObjectName("END")
        self.gridLayout_6.addWidget(self.END, 3, 0, 1, 1)
        self.gridLayout.addWidget(self.groupBox_6, 4, 0, 1, 1)
        self.groupBox_3 = QtWidgets.QGroupBox(self.scrollAreaWidgetContents_3)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.groupBox_3.sizePolicy().hasHeightForWidth())
        self.groupBox_3.setSizePolicy(sizePolicy)
        self.groupBox_3.setStyleSheet("color: rgb(197, 178, 36);")
        self.groupBox_3.setFlat(True)
        self.groupBox_3.setObjectName("groupBox_3")
        self.gridLayout_2 = QtWidgets.QGridLayout(self.groupBox_3)
        self.gridLayout_2.setObjectName("gridLayout_2")
        self.MouseDown = QtWidgets.QPushButton(self.groupBox_3)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.MouseDown.sizePolicy().hasHeightForWidth())
        self.MouseDown.setSizePolicy(sizePolicy)
        self.MouseDown.setStyleSheet("color: rgb(230, 187, 29);")
        self.MouseDown.setObjectName("MouseDown")
        self.gridLayout_2.addWidget(self.MouseDown, 5, 0, 1, 1)
        self.MouseUp = QtWidgets.QPushButton(self.groupBox_3)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.MouseUp.sizePolicy().hasHeightForWidth())
        self.MouseUp.setSizePolicy(sizePolicy)
        self.MouseUp.setStyleSheet("color: rgb(230, 187, 29);")
        self.MouseUp.setObjectName("MouseUp")
        self.gridLayout_2.addWidget(self.MouseUp, 6, 0, 1, 1)
        self.KeyPress = QtWidgets.QPushButton(self.groupBox_3)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Ignored, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.KeyPress.sizePolicy().hasHeightForWidth())
        self.KeyPress.setSizePolicy(sizePolicy)
        self.KeyPress.setStyleSheet("color: rgb(230, 187, 29);")
        self.KeyPress.setObjectName("KeyPress")
        self.gridLayout_2.addWidget(self.KeyPress, 0, 0, 1, 1)
        self.KeyUp = QtWidgets.QPushButton(self.groupBox_3)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Ignored, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.KeyUp.sizePolicy().hasHeightForWidth())
        self.KeyUp.setSizePolicy(sizePolicy)
        self.KeyUp.setStyleSheet("color: rgb(230, 187, 29);")
        self.KeyUp.setObjectName("KeyUp")
        self.gridLayout_2.addWidget(self.KeyUp, 2, 0, 1, 1)
        self.MousePress = QtWidgets.QPushButton(self.groupBox_3)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.MousePress.sizePolicy().hasHeightForWidth())
        self.MousePress.setSizePolicy(sizePolicy)
        self.MousePress.setStyleSheet("color: rgb(230, 187, 29);")
        self.MousePress.setObjectName("MousePress")
        self.gridLayout_2.addWidget(self.MousePress, 4, 0, 1, 1)
        self.KeyDown = QtWidgets.QPushButton(self.groupBox_3)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Ignored, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.KeyDown.sizePolicy().hasHeightForWidth())
        self.KeyDown.setSizePolicy(sizePolicy)
        self.KeyDown.setStyleSheet("color: rgb(230, 187, 29);")
        self.KeyDown.setObjectName("KeyDown")
        self.gridLayout_2.addWidget(self.KeyDown, 1, 0, 1, 1)
        self.MouseMove = QtWidgets.QPushButton(self.groupBox_3)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.MouseMove.sizePolicy().hasHeightForWidth())
        self.MouseMove.setSizePolicy(sizePolicy)
        self.MouseMove.setStyleSheet("color: rgb(230, 187, 29);")
        self.MouseMove.setObjectName("MouseMove")
        self.gridLayout_2.addWidget(self.MouseMove, 7, 0, 1, 1)
        self.TypeEvent = QtWidgets.QPushButton(self.groupBox_3)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Ignored, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.TypeEvent.sizePolicy().hasHeightForWidth())
        self.TypeEvent.setSizePolicy(sizePolicy)
        self.TypeEvent.setStyleSheet("color: rgb(230, 187, 29);")
        self.TypeEvent.setObjectName("TypeEvent")
        self.gridLayout_2.addWidget(self.TypeEvent, 3, 0, 1, 1)
        self.gridLayout.addWidget(self.groupBox_3, 0, 0, 1, 1)
        self.scrollArea.setWidget(self.scrollAreaWidgetContents_3)
        self.gridLayout_7.addWidget(self.scrollArea, 0, 0, 5, 1)
        self.Run = QtWidgets.QPushButton(self.EditorTab)
        self.Run.setEnabled(True)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.Run.sizePolicy().hasHeightForWidth())
        self.Run.setSizePolicy(sizePolicy)
        self.Run.setStyleSheet("color: rgb(230, 187, 29);")
        self.Run.setObjectName("Run")
        self.gridLayout_7.addWidget(self.Run, 1, 1, 1, 1)
        self.Clear = QtWidgets.QPushButton(self.EditorTab)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.Clear.sizePolicy().hasHeightForWidth())
        self.Clear.setSizePolicy(sizePolicy)
        self.Clear.setStyleSheet("color: rgb(230, 187, 29);")
        self.Clear.setObjectName("Clear")
        self.gridLayout_7.addWidget(self.Clear, 1, 3, 1, 1)
        self.textEdit = QtWidgets.QTextEdit(self.EditorTab)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(5)
        sizePolicy.setHeightForWidth(self.textEdit.sizePolicy().hasHeightForWidth())
        self.textEdit.setSizePolicy(sizePolicy)
        self.textEdit.setObjectName("textEdit")
        self.gridLayout_7.addWidget(self.textEdit, 0, 1, 1, 3)
        self.tabWidget.addTab(self.EditorTab, "")
        self.SettingsTab = QtWidgets.QWidget()
        self.SettingsTab.setObjectName("SettingsTab")
        self.formLayout = QtWidgets.QFormLayout(self.SettingsTab)
        self.formLayout.setObjectName("formLayout")
        self.groupBox = QtWidgets.QGroupBox(self.SettingsTab)
        self.groupBox.setStyleSheet("")
        self.groupBox.setTitle("")
        self.groupBox.setObjectName("groupBox")
        self.gridLayout_13 = QtWidgets.QGridLayout(self.groupBox)
        self.gridLayout_13.setObjectName("gridLayout_13")
        self.Linux = QtWidgets.QRadioButton(self.groupBox)
        self.Linux.setChecked(True)
        self.Linux.setObjectName("Linux")
        self.gridLayout_13.addWidget(self.Linux, 2, 0, 1, 1)
        self.Windows = QtWidgets.QRadioButton(self.groupBox)
        self.Windows.setChecked(False)
        self.Windows.setObjectName("Windows")
        self.gridLayout_13.addWidget(self.Windows, 1, 0, 1, 1)
        self.label = QtWidgets.QLabel(self.groupBox)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.label.sizePolicy().hasHeightForWidth())
        self.label.setSizePolicy(sizePolicy)
        self.label.setMinimumSize(QtCore.QSize(0, 5))
        self.label.setBaseSize(QtCore.QSize(0, 5))
        self.label.setStyleSheet("background-color: rgb(43, 43, 43);")
        self.label.setObjectName("label")
        self.gridLayout_13.addWidget(self.label, 0, 0, 1, 1)
        self.formLayout.setWidget(2, QtWidgets.QFormLayout.FieldRole, self.groupBox)
        self.tabWidget.addTab(self.SettingsTab, "")
        self.tab = QtWidgets.QWidget()
        self.tab.setObjectName("tab")
        self.formLayout_2 = QtWidgets.QFormLayout(self.tab)
        self.formLayout_2.setObjectName("formLayout_2")
        self.tabWidget_2 = QtWidgets.QTabWidget(self.tab)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(5)
        sizePolicy.setHeightForWidth(self.tabWidget_2.sizePolicy().hasHeightForWidth())
        self.tabWidget_2.setSizePolicy(sizePolicy)
        self.tabWidget_2.setTabPosition(QtWidgets.QTabWidget.South)
        self.tabWidget_2.setTabShape(QtWidgets.QTabWidget.Triangular)
        self.tabWidget_2.setObjectName("tabWidget_2")
        self.Conditional = QtWidgets.QWidget()
        self.Conditional.setObjectName("Conditional")
        self.formLayout_3 = QtWidgets.QFormLayout(self.Conditional)
        self.formLayout_3.setObjectName("formLayout_3")
        self.textEdit_2 = QtWidgets.QTextEdit(self.Conditional)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(5)
        sizePolicy.setHeightForWidth(self.textEdit_2.sizePolicy().hasHeightForWidth())
        self.textEdit_2.setSizePolicy(sizePolicy)
        self.textEdit_2.setReadOnly(True)
        self.textEdit_2.setObjectName("textEdit_2")
        self.formLayout_3.setWidget(0, QtWidgets.QFormLayout.FieldRole, self.textEdit_2)
        self.tabWidget_2.addTab(self.Conditional, "")
        self.tab_3 = QtWidgets.QWidget()
        self.tab_3.setObjectName("tab_3")
        self.tabWidget_2.addTab(self.tab_3, "")
        self.formLayout_2.setWidget(0, QtWidgets.QFormLayout.FieldRole, self.tabWidget_2)
        self.tabWidget.addTab(self.tab, "")
        self.gridLayout_5.addWidget(self.tabWidget, 1, 0, 1, 1)
        self.Info = QtWidgets.QLabel(self.groupBox_2)
        self.Info.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.Info.setObjectName("Info")
        self.gridLayout_5.addWidget(self.Info, 2, 0, 1, 1)
        self.horizontalLayout.addWidget(self.groupBox_2)
        MainWindow.setCentralWidget(self.centralwidget)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)

        self.retranslateUi(MainWindow)
        self.tabWidget.setCurrentIndex(0)
        self.tabWidget_2.setCurrentIndex(0)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.groupBox_2.setTitle(_translate("MainWindow", "Ghost Macro"))
        self.Stop.setText(_translate("MainWindow", "Stop"))
        self.groupBox_5.setTitle(_translate("MainWindow", "Special"))
        self.Wait.setText(_translate("MainWindow", "Wait"))
        self.Repeat.setText(_translate("MainWindow", "Repeat"))
        self.Break.setText(_translate("MainWindow", "Break"))
        self.groupBox_4.setTitle(_translate("MainWindow", "ClipBoard"))
        self.TestClipBoard.setText(_translate("MainWindow", "TestClipBoard"))
        self.SetClipBoard.setText(_translate("MainWindow", "SetClipBoard"))
        self.PasteClipBoard.setText(_translate("MainWindow", "PasteClipBoard"))
        self.TypeClipBoard.setText(_translate("MainWindow", "TypeClipBoard"))
        self.groupBox_6.setTitle(_translate("MainWindow", "Conditionals"))
        self.Var.setText(_translate("MainWindow", "Var"))
        self.Evaluate.setText(_translate("MainWindow", "Evaluate"))
        self.IF.setText(_translate("MainWindow", "IF"))
        self.END.setText(_translate("MainWindow", "END"))
        self.groupBox_3.setTitle(_translate("MainWindow", "Input"))
        self.MouseDown.setText(_translate("MainWindow", "MouseDownEvent"))
        self.MouseUp.setText(_translate("MainWindow", "MouseUpEvent"))
        self.KeyPress.setText(_translate("MainWindow", "KeyPressEvent"))
        self.KeyUp.setText(_translate("MainWindow", "KeyUpEvent"))
        self.MousePress.setText(_translate("MainWindow", "MousePressEvent"))
        self.KeyDown.setText(_translate("MainWindow", "KeyDownEvent"))
        self.MouseMove.setText(_translate("MainWindow", "MouseMoveEvent"))
        self.TypeEvent.setText(_translate("MainWindow", "TypeEvent"))
        self.Run.setText(_translate("MainWindow", "Run"))
        self.Clear.setText(_translate("MainWindow", "Clear"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.EditorTab), _translate("MainWindow", "Editor"))
        self.Linux.setText(_translate("MainWindow", "Linux"))
        self.Windows.setText(_translate("MainWindow", "Windows"))
        self.label.setText(_translate("MainWindow", "Operating System"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.SettingsTab), _translate("MainWindow", "Settings"))
        self.textEdit_2.setHtml(_translate("MainWindow", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'MS Shell Dlg 2\'; font-size:8.25pt; font-weight:400; font-style:normal;\">\n"
"<p align=\"center\" style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Sans Serif\'; font-size:20pt; font-weight:600; text-decoration: underline;\">Conditional Statments</span></p>\n"
"<p align=\"center\" style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-family:\'Sans Serif\'; font-size:20pt; font-weight:600; text-decoration: underline;\"><br /></p>\n"
"<p align=\"center\" style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Sans Serif\'; font-size:14pt;\">Conditional statements are used accordingly:</span></p>\n"
"<p align=\"center\" style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Sans Serif\'; font-size:14pt; vertical-align:sub;\">IF A IS/NOT B (Conditional INDEX)</span></p>\n"
"<p align=\"center\" style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Sans Serif\'; font-size:14pt; vertical-align:sub;\">MACRO BLOCK</span></p>\n"
"<p align=\"center\" style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Sans Serif\'; font-size:14pt; vertical-align:sub;\">END (Conditional INDEX)</span></p>\n"
"<p align=\"center\" style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-family:\'Sans Serif\'; font-size:14pt; vertical-align:sub;\"><br /></p>\n"
"<p align=\"center\" style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Sans Serif\'; font-size:14pt;\">Conditional INDEX:</span></p>\n"
"<p align=\"center\" style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Sans Serif\'; font-size:14pt; vertical-align:sub;\">The Conditional INDEX is used to link up a block and its END statement </span></p>\n"
"<p align=\"center\" style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Sans Serif\'; font-size:14pt; vertical-align:sub;\">By default the editor will set a unique INDEX for each conditional statement but it is possible to name these indexes yourself!</span></p>\n"
"<p align=\"center\" style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Sans Serif\'; font-size:14pt; vertical-align:sub;\">EXAMPLE:</span></p>\n"
"<p align=\"center\" style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Sans Serif\'; font-size:14pt; vertical-align:sub;\">IF A IS/NOT B C</span></p>\n"
"<p align=\"center\" style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Sans Serif\'; font-size:14pt; vertical-align:sub;\">MACRO BLOCK</span></p>\n"
"<p align=\"center\" style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Sans Serif\'; font-size:14pt; vertical-align:sub;\">END C</span></p>\n"
"<p align=\"center\" style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-family:\'Sans Serif\'; font-size:14pt; vertical-align:sub;\"><br /></p>\n"
"<p align=\"center\" style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Sans Serif\'; font-size:14pt;\">Nesting Conditionals:</span></p>\n"
"<p align=\"center\" style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Sans Serif\'; font-size:14pt; vertical-align:sub;\">Using the Conditional INDEX you can nest conditional statements accordingly:</span></p>\n"
"<p align=\"center\" style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Sans Serif\'; font-size:14pt; vertical-align:sub;\">IF A IS/NOT B C</span></p>\n"
"<p align=\"center\" style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-family:\'Sans Serif\'; font-size:9pt;\"><br /></p>\n"
"<p align=\"center\" style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Sans Serif\'; font-size:14pt; vertical-align:sub;\">IF A IS/NOT B D</span></p>\n"
"<p align=\"center\" style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Sans Serif\'; font-size:14pt; vertical-align:sub;\">MACRO BLOCK</span></p>\n"
"<p align=\"center\" style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Sans Serif\'; font-size:14pt; vertical-align:sub;\">END D</span></p>\n"
"<p align=\"center\" style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-family:\'Sans Serif\'; font-size:14pt; vertical-align:sub;\"><br /></p>\n"
"<p align=\"center\" style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Sans Serif\'; font-size:14pt; vertical-align:sub;\">END C</span></p>\n"
"<p align=\"center\" style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-family:\'Sans Serif\'; font-size:14pt; vertical-align:sub;\"><br /></p>\n"
"<p align=\"center\" style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Sans Serif\'; font-size:20pt; font-weight:600; text-decoration: underline;\">Repeats</span></p>\n"
"<p align=\"center\" style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-family:\'Sans Serif\'; font-size:20pt; font-weight:600; text-decoration: underline;\"><br /></p>\n"
"<p align=\"center\" style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Sans Serif\'; font-size:14pt;\">Repeats are used accordingly:</span></p>\n"
"<p align=\"center\" style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Sans Serif\'; font-size:14pt; vertical-align:sub;\">Repeat (Number of times to repeat) INDEX</span></p>\n"
"<p align=\"center\" style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Sans Serif\'; font-size:14pt; vertical-align:sub;\">MACRO BLOCK</span></p>\n"
"<p align=\"center\" style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Sans Serif\'; font-size:14pt; vertical-align:sub;\">END INDEX</span></p>\n"
"<p align=\"center\" style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-family:\'Sans Serif\'; font-size:14pt; vertical-align:sub;\"><br /></p>\n"
"<p align=\"center\" style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Sans Serif\'; font-size:14pt;\">Endless loops:</span></p>\n"
"<p align=\"center\" style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Sans Serif\'; font-size:14pt; vertical-align:sub;\">To create an endless loop just set the NUMBER to 0</span></p>\n"
"<p align=\"center\" style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-family:\'Sans Serif\'; font-size:9pt;\"><br /></p></body></html>"))
        self.tabWidget_2.setTabText(self.tabWidget_2.indexOf(self.Conditional), _translate("MainWindow", "Conditionals"))
        self.tabWidget_2.setTabText(self.tabWidget_2.indexOf(self.tab_3), _translate("MainWindow", "Tab 2"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tab), _translate("MainWindow", "Documentation"))
        self.Info.setText(_translate("MainWindow", "TextLabel"))


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())

